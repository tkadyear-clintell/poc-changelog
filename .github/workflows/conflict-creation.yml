name: Conflict PR Test

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  test-conflict-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Rebase *dev* onto main
        id: rebase
        shell: bash
        run: |
          set -e
          git fetch origin
          # muy importante: nos vamos a dev
          git checkout dev
          # intentamos rebasear dev con main
          if git rebase origin/main; then
            echo "conflicts=false" >> "$GITHUB_OUTPUT"
          else
            echo "conflicts=true" >> "$GITHUB_OUTPUT"
            # NO abortamos para que queden los <<<<<<< en el working tree
            # git rebase --abort
          fi

      # solo si hubo conflicto
      - name: Create PR for conflicts
        if: steps.rebase.outputs.conflicts == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: conflicts to resolve"
          title: "chore: conflicts to resolve"
          body: "This PR contains merge conflicts that need manual resolution."
          branch: fix/conflict-update-dev-with-main
          base: dev
          branch-suffix: short-commit-hash
          delete-branch: false

      - name: Check outputs
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
